@using Bonobo.Git.Server.Extensions
@using System.Web.Mvc.Html
@using Bonobo.Git.Server.Models
@using Bonobo.Git.Server.Data

@model Dictionary<string, RepositoryDetailModel[]>
@{
    ViewBag.Title = Resources.Repository_Index_Title;
}

@functions
{
    string GetNameToDisplay(string name, RepositoryDetailStatus status)
    {
        switch (status)
        {
            case RepositoryDetailStatus.Valid:
                return name;

            case RepositoryDetailStatus.Missing:
                return name + " (Missing)";

            case RepositoryDetailStatus.Unknown:
            default:
                return name + " (Status Unknown)";
        }
    }
}



@{
    object RepoNotFoundObj;
    bool RepoNotFound = false;
    if (TempData.TryGetValue("RepositoryNotFound", out RepoNotFoundObj))
    {
        RepoNotFound = (bool)RepoNotFoundObj;
    }
    if (RepoNotFound)
    {
        <div class="pure-u-2-5">
            @Html.Partial("~/Views/Shared/_ItemNotFound.cshtml")
        </div>
    }
}
@if (TempData["CreateSuccess"] as bool? == true)
{
    <div class="summary-success">
        <p>@Resources.Repository_Create_Success</p>
        <p>@Html.ActionLink(string.Format(@Resources.Repository_Create_Success_Go_To, TempData["SuccessfullyCreatedRepositoryName"].ToString()), "Detail", new { id = TempData["SuccessfullyCreatedRepositoryId"].ToString() })</p>
    </div>
}
@if (TempData["CloneSuccess"] as bool? == true)
{
    <div class="summary-success">
        <p>@Resources.Repository_Clone_Success</p>
    </div>
}
@if (TempData["DeleteSuccess"] as bool? == true)
{
    <div class="summary-success">
        <p>@Resources.Repository_Delete_Success</p>
    </div>
}


<div class="row">
    @{
        foreach (KeyValuePair<string, RepositoryDetailModel[]> model in Model)
        {
            bool emptyGroup = string.IsNullOrEmpty(model.Key);

            if (!emptyGroup)
            {
                <div class="col-md-12 alert alert-info alert-dismissible">
                    <h2 class="group" style="margin-left:20px;">
                        <span class="lnr lnr-inbox" data-group="@(model.Key)"></span>
                        @(model.Key)
                    </h2>
                </div>
            }
            foreach (RepositoryDetailModel detail in model.Value)
            {
                <div class="col-md-4">
                    <div class="panel">
                        <div class="panel-heading">
                            <div class="row">
                                <div class="col-md-8">
                                    <a href="/Repository/Detail/@detail.Id"><i class="lnr lnr-map"></i>@detail.Name</a>
                                </div>
                                <div class="col-md-4" style=" text-align:right">
                                    <a href="@Url.Action("Edit","Repository", new { id = detail.Id })"><i class="fa fa-pencil-square-o"></i> @Resources.Repository_Detail_Edit</a>
                                </div>
                            </div>
                        </div>
                        <div class="panel-body">
                            <div class="row" style="height:85px; word-break:break-all; overflow:hidden">
                                @if (detail.Logo.Base64Image != null)
                                {
                                    <image src="data:image/png;base64,@detail.Logo.Base64Image" style="max-height:60px; float:left; margin:10px; "></image>
                                }
                                @detail.Description
                            </div>




                            @if (detail.Administrators.Length > 0)
                            {<div class="row">
                                    <i class="lnr lnr-user"></i>
                                    @detail.Administrators[0].DisplayName
                                </div>
                            }




                        </div>
                    </div>
                </div>
            }
        }
    }

</div>

@section scripts{
    <script src="~/Scripts/RepositoryGroupToggle.js" defer="defer"></script>
    <script>new Clipboard('.copy-to-clip-button');</script>
}
