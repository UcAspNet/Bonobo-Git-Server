@using Bonobo.Git.Server.Extensions
@using MvcCheckBoxList.Model
@model Bonobo.Git.Server.Models.RepositoryDetailModel
@{
    ViewBag.Title = Resources.Repository_Create_Title;
}

@using (Html.BeginForm("Create", "Repository", FormMethod.Post, new { @class = "pure-form pure-form-aligned", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false, Resources.Repository_Create_Fail)
    
<div class="container-fluid">

    <div class="pure-control-group">
        <div class="input-group">
            <span class="input-group-btn">
                <button class="btn btn-primary" style=" width:180px;" type="button">@Resources.Repository_Detail_Name</button>
            </span>
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Name)
        </div>


    </div><br>
    <div class="pure-control-group">
        <div class="input-group">
            <span class="input-group-btn">
                <button class="btn btn-primary" style=" width:180px;" type="button">@Resources.Repository_Detail_Group</button>
            </span>
            @Html.TextBoxFor(m => m.Group, new { @class = "form-control" })

        </div>


    </div><br>
    <div class="pure-control-group">
        <div class="input-group">
            <span class="input-group-btn">
                <button class="btn btn-primary" style=" width:180px;" type="button">@Resources.Repository_Detail_Description</button>
            </span>
            @Html.TextBoxFor(m => m.Description, new { @class = "form-control medium" })

        </div>
    </div>
    <br>
    <div class="pure-control-group">

        <div class="input-group">
            <span class="input-group-btn">
                <button class="btn btn-primary" style=" width:180px;" type="button">@Resources.Repository_Detail_Logo_PostedFile</button>
            </span>
            <input type="file" name="Logo.PostedFile" id="Logo_PostedFile" />
            <sup>.png, .jpg, .jpeg, .gif</sup>

        </div>


    </div>
    <br>
    <div class="pure-control-group">
        <div class="input-group">
            <span class="input-group-btn">
                <button class="btn btn-primary" style=" width:180px;" type="button">@Resources.Repository_Detail_RemoveLogo</button>
            </span>

            @Html.CheckBoxFor(m => m.Logo.RemoveLogo, new { @class = "form-control" })
        </div>


    </div><br>
    <div class="pure-control-group">
        <div class="input-group">
            <span class="input-group-btn">
                <button class="btn btn-primary" style=" width:180px;" type="button">@Resources.Repository_Detail_Anonymous</button>
            </span>

            @Html.CheckBoxFor(m => m.AllowAnonymous, new { @onClick = "document.getElementById('AllowAnonymousPush').disabled = !this.checked", @class = "form-control" })
            <!-- <i class="fa fa-info-circle" title="@Resources.Repository_AllowAnonymousHint"></i>-->
        </div>


    </div><br>

    <div class="pure-control-group">
        <div class="input-group">
            <span class="input-group-btn">
                <button class="btn btn-primary" style=" width:180px;" type="button">@Resources.Repository_Detail_AllowAnonymousPush</button>
            </span>


            @{
                object attribs = new { @id = "AllowAnonymousPush", @class = "form-control" };
                if (!Model.AllowAnonymous)
                {
                    attribs = new { @id = "AllowAnonymousPush", @disabled = "", @class = "form-control" };
                }
            }
            @Html.EnumDropDownListFor(m => m.AllowAnonymousPush, attribs)
            <!-- <i class="fa fa-info-circle" title="@Resources.Repository_AllowAnonymousPushHint"></i>-->
        </div>


    </div><br>


    @if (AppSettings.IsPushAuditEnabled)
    {
        <div class="pure-control-group">
            <div class="input-group">
                <span class="input-group-btn">
                    <button class="btn btn-primary" style=" width:180px;" type="button">@Resources.Repository_Detail_AuditPushUser</button>
                </span>

                @Html.CheckBoxFor(m => m.AuditPushUser, new { @class = "form-control" })
            </div>
        </div>
        <br />
    }
    <div class="pure-control-group">
        <div class="input-group">
            <span class="input-group-btn">
                <button class="btn btn-primary" style=" width:180px;" type="button">@Resources.Repository_Detail_LinksUseGlobal</button>
            </span>

            @Html.CheckBoxFor(m => m.LinksUseGlobal, new { @onClick = "document.getElementById('LinksRegex').disabled = this.checked; document.getElementById('LinksUrl').disabled = this.checked", @class = "form-control" })
        </div>
    </div>
    <br />
    <div class="pure-control-group">
        <div class="input-group">
            <span class="input-group-btn">
                <button class="btn btn-primary" style=" width:180px;" type="button">@Resources.Settings_Global_LinksRegex</button>
            </span>
            @{
                attribs = new { @class = "medium form-control" };
                if (Model.LinksUseGlobal)
                {
                    attribs = new { @class = "medium form-control", disabled = "" };
                }
                @Html.TextBoxFor(m => m.LinksRegex, attribs);
                @Html.ValidationMessageFor(m => m.LinksRegex);
            }

        </div>


    </div><br>
    <div class="pure-control-group">
        <div class="input-group">
            <span class="input-group-btn" title="@Resources.Settings_Global_LinksUrl_Hint">
                <button class="btn btn-primary" style=" width:180px;" type="button">@Resources.Settings_Global_LinksUrl</button>
            </span>
            @Html.TextBoxFor(m => m.LinksUrl, attribs)

        </div>
    </div><br>

    <div class="pure-control-group checkboxlist">

        <div class="input-group">
            <span class="input-group-btn">
                <button class="btn btn-primary" style=" width:180px;" type="button">@Resources.Repository_Detail_Users</button>
            </span>
            <span class="form-control" title="@Resources.Repository_UsersHint">
                @Html.CheckBoxListFor(m => m.PostedSelectedUsers, m => m.AllUsers, m => m.Id, m => m.DisplayName, m => m.Users, Position.Vertical)
            </span>
        </div>

    </div>

    <br>

    <div class="pure-control-group checkboxlist">

        <div class="input-group">
            <span class="input-group-btn">
                <button class="btn btn-primary" style=" width:180px;" type="button">@Resources.Repository_Detail_Administrators</button>
            </span>
            <span class="form-control" title="@Resources.Repository_AdministratorsHint">
                @Html.CheckBoxListFor(m => m.PostedSelectedAdministrators, m => m.AllAdministrators, m => m.Id, m => m.DisplayName, m => m.Administrators, Position.Vertical)
            </span>
            @Html.ValidationMessageFor(m => m.Administrators)
        </div>

    </div> <br>

    <div class="pure-control-group checkboxlist">

        <div class="input-group">
            <span class="input-group-btn">
                <button class="btn btn-primary" style=" width:180px;" type="button">@Resources.Repository_Detail_Teams</button>
            </span>
            <span class="form-control" title="@Resources.Repository_TeamsHint">
                @Html.CheckBoxListFor(m => m.PostedSelectedTeams, m => m.AllTeams, mm => mm.Id, mm => mm.DisplayName, mm => mm.Teams, Position.Vertical)
            </span>
            @Html.ValidationMessageFor(m => m.Administrators)
        </div>

    </div>



    <div class="pure-controls">
        <a class="btn btn-success" href="@Url.Action("Detail", new {id = Model.Id})"><i class="lnr lnr-arrow-up"></i> @Resources.Repository_Edit_Back</a>
        <button type="submit" class="btn btn-primary" style=" width:200px;"><i class="fa fa-save"></i> @Resources.Repository_Edit_Submit</button>
    </div>
</div>
}
